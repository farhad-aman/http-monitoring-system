replicaCount: 1

image:
  repository: feri80/http-monitoring-system
  pullPolicy: IfNotPresent
  tag: "1.0.1"

service:
  type: ClusterIP
  port: 8000
  containerPort: 8000

env:
  monitorInterval: 1

postgresql:
  architecture: replication
  replicaCount: 1
  auth:
    database: monitor
    username: postgres
    password: password
  image:
    registry: docker.io
    repository: bitnami/postgresql
    tag: "13.0.0-debian-10-r0"
    pullPolicy: IfNotPresent


kube-prometheus-stack:
  prometheus:
    prometheusSpec:
      scrapeConfigs:
      - job_name: 'http-monitoring-system-metrics'
        static_configs:
          - targets: ['http-monitoring-system-svc.default.svc.cluster.local:8000']
      # Adjust if you're using ServiceMonitors and want to ensure broad discovery
      serviceMonitorSelector: {}
      serviceMonitorNamespaceSelector: {}
      podMonitorSelector: {}
      podMonitorNamespaceSelector: {}
  grafana:
    enabled: true
    adminPassword: "admin"
    service:
      type: ClusterIP

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 50
